trigger:
  branches:
    include:
      - master

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

stages:
  - stage: build
    displayName: 'Build'
    jobs:
      - job: build
        displayName: 'Build Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn clean compile
            displayName: 'Maven Clean Compile'

  - stage: test
    displayName: 'Test'
    jobs:
      - job: test
        displayName: 'Test Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn test
            displayName: 'Maven Test'

  - stage: package
    displayName: 'Package'
    jobs:
      - job: package
        displayName: 'Package Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn package
            displayName: 'Maven Package'

  - stage: deploy_tomcat
    displayName: 'Deploy to Tomcat'
    jobs:
      - job: deploy
        displayName: 'Deploy to Tomcat Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn tomcat7:deploy
            displayName: 'Maven Deploy to Tomcat'

  - stage: load_test
    displayName: 'Load Test'
    jobs:
      - job: load_test
        displayName: 'JMeter Load Test Job'
        pool:
          name: Petclinic
        steps:
          - task: CmdLine@2
            displayName: 'Run JMeter Locally'
            inputs:
              script: |
                rm -rf $(Pipeline.Workspace)/jmeter_report
                rm -rf $(Pipeline.Workspace)/results.jtl
                jmeter -Jmeter.save.saveservice.output_format=xml -n -t $(Pipeline.Workspace)/load-test-repo/load-test.jmx -l $(Pipeline.Workspace)/results.jtl -e -o $(Pipeline.Workspace)/jmeter_report

  - stage: run_selenium_test
    displayName: 'Run Selenium Test'
    jobs:
      - job: run_selenium_test
        displayName: 'Run Selenium Test Job'
        pool:
          name: Petclinic
        steps:
          - script: python /home/andychen/devoteam-traineeship-petclinic/selenium-test.py
            displayName: 'Run Selenium Test'
          - task: PublishTestResults@2
            displayName: 'Publish Selenium Test Results'
            inputs:
              testResultsFiles: 'report.html'
              testRunTitle: 'Selenium Test Results'

  - stage: TerraformProvision
    displayName: 'Terraform Provisioning'
    jobs:
      - job: TerraformJob
        displayName: 'Run Terraform'
        pool:
          name: Petclinic
        steps:
          - checkout: self
          - script: |
              cd /home/andychen/terraform/
              terraform init
              terraform plan
              terraform apply -auto-approve
            displayName: 'Terraform Apply'
            
  - stage: DeployWebapp
    displayName: 'Deploy Webapp using Ansible'
    jobs:
      - job: DeployJob
        displayName: 'Deploy Webapp'
        pool:
          name: Petclinic
        steps:
          - script: |
              cd /home/andychen/terraform/
              VM_IPS="4.180.204.20,4.180.204.38,4.180.204.47,"
              echo "VM IPS is: $VM_IPS"
              ansible-playbook -i "$VM_IPS" /home/andychen/ansible_project/playbook/petclinic_app_combined.yml 
            displayName: 'Deploy webapp'



  - stage: load_test_production_environment
    displayName: 'Load Test Production Environment'
    jobs:
      - job: load_test_production_environment
        displayName: 'JMeter Load Test Production Job'
        pool:
          name: Petclinic
        steps:
          - task: CmdLine@2
            displayName: 'Run JMeter on VM'
            inputs:
              script: |
                rm -rf $(Pipeline.Workspace)/jmeter_report
                rm -rf $(Pipeline.Workspace)/results.jtl
                jmeter -Jmeter.save.saveservice.output_format=xml -n -t $(Pipeline.Workspace)/load-test-repo/VM_load_test.jmx -l $(Pipeline.Workspace)/results.jtl -e -o $(Pipeline.Workspace)/jmeter_report

  - stage: run_selenium_vm
    displayName: 'Run Selenium VM'
    jobs:
      - job: run_selenium_VM
        displayName: 'Run Selenium VM'
        pool:
          name: Petclinic
        steps:
          - script: python /home/andychen/devoteam-traineeship-petclinic/selenium-vm.py
            displayName: 'Run Selenium Test'
          - task: PublishTestResults@2
            displayName: 'Publish Selenium Test Results'
            inputs:
              testResultsFiles: 'report.html'
              testRunTitle: 'Selenium Test Results'

schedules:
  - cron: "0 0 * * *"   
    displayName: DailySchedule
    branches:
      include:
        - master
