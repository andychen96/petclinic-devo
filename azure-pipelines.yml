trigger:
  branches:
    include:
      - master

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

stages:
  - stage: build
    displayName: 'Build'
    jobs:
      - job: build
        displayName: 'Build Job'
        pool:
          name: Petclinic
        steps:
          - script: |
              mvn clean compile

  - stage: test
    displayName: 'Test'
    jobs:
      - job: test
        displayName: 'Test Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn test

  - stage: ansible_deploy_test
    displayName: 'Ansible Deploy to Test'
    jobs:
      - job: ansible_deploy_test
        displayName: 'Ansible Deploy Test Job'
        pool:
          name: Petclinic
        steps:
          - script: |
              ansible-playbook -i /home/andychen/ansible_project/inventory/test /home/andychen/ansible_project/playbook/petclinic_app_test.yml
  
  - stage: package
    displayName: 'Package'
    jobs:
      - job: package
        displayName: 'Package Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn package

  - stage: deploy_tomcat
    displayName: 'Deploy to Tomcat'
    jobs:
      - job: deploy
        displayName: 'Deploy to Tomcat Job'
        pool:
          name: Petclinic
        steps:
          - script: mvn tomcat7:deploy

  - stage: load_test
    displayName: 'Load Test'
    jobs:
      - job: load_test
        displayName: 'JMeter Load Test Job'
        pool:
          name: Petclinic
        steps:
          - task: CmdLine@2
            displayName: 'Run JMeter Locally'
            inputs:
              script: |
                rm -rf $(Pipeline.Workspace)/jmeter_report
                rm -rf $(Pipeline.Workspace)/results.jtl
                jmeter -Jmeter.save.saveservice.output_format=xml -n -t $(Pipeline.Workspace)/load-test-repo/load-test.jmx -l $(Pipeline.Workspace)/results.jtl -e -o $(Pipeline.Workspace)/jmeter_report

  - stage: ansible_deploy_load
    displayName: 'Ansible Deploy to Load'
    jobs:
      - job: ansible_deploy_load
        displayName: 'Ansible Deploy Load Job'
        pool:
          name: Petclinic
        steps:
          - script: |
              ansible-playbook -i /home/andychen/ansible_project/inventory/test /home/andychen/ansible_project/playbook/petclinic_app_production.yml

  - stage: run_selenium_test
    displayName: 'Run Selenium Test'
    jobs:
    - job: run_selenium_test
      displayName: 'Run Selenium Test Job'
      pool:
        name: Petclinic 
      steps:
        - script: |
            python /home/andychen/devoteam-traineeship-petclinic/selenium-test.py
        - task: PublishTestResults@2
          displayName: 'Publish Selenium Test Results'
          inputs:
            testResultsFiles: 'report.html'
            testRunTitle: 'Selenium Test Results'


  - stage: ansible_deploy_selenium
    displayName: 'Ansible Deploy to Selenium'
    jobs:
      - job: ansible_deploy_selenium
        displayName: 'Ansible Deploy Selenium Job'
        pool:
          name: Petclinic
        steps:
          - script: |
              ansible-playbook -i /home/andychen/ansible_project/inventory/test /home/andychen/ansible_project/playbook/petclinic_app_acceptance.yml

  - stage: TerraformProvision
    displayName: 'Terraform Provisioning'
    jobs:
    - job: TerraformJob
      displayName: 'Run Terraform'
      pool:
        name: Petclinic
      steps:
        - checkout: self  # checks out files from repo

        - script: |
            cd /home/andychen/terraform/
            terraform init
            terraform plan
            terraform apply -auto-approve
          displayName: 'Terraform Apply'



  - stage: Deploy_to_Production
    displayName: Deploy to production Environment
    dependsOn: TerraformProvision
    jobs:
      - job: deploy_to_production
        displayName: Deploy to production Environment
        pool:
          name: Petclinic
        steps:
          - script: |
              pip install --user jmespath
          - script: |
              scp -r -i /home/andychen/terraform/private_key.pem /home/andychen/ansible_project andychen@$(cat /home/andychen/ansible_project/azure_vm/output.json | jq -r '.vm_public_ip.value'):/home/andychen/
            displayName: 'Copy Ansible playbook to VM'
          - script: |
              ansible-playbook -i /home/andychen/ansible_project/inventory/test --private-key=~/.ssh/id_rsa /home/andychen/ansible_project/playbook/production.yml -u andychen
            displayName: 'Run Ansible playbook'

schedules:
- cron: "0 0 * * *"   
  displayName: DailySchedule
  branches:
    include:
      - master
